version: 2.1

orbs:
  sre: tracktor/ci-tools@0.1.5

references:
  staging_context: &staging_context
    - docker
  production_context: &production_context
    - docker

executors:

  build-docker:
    docker:
      - image: cimg/base:current

  export-poetry:
    docker:
      - image: cimg/python:3.10

  tests:
    docker:
      - image: cimg/python:3.10
      - image: cimg/postgres:13.6
        environment:
          POSTGRES_PASSWORD: postgres


jobs:

  # Testing

  run-tests:
    executor: tests
    steps:
      - checkout
      - run:
          name: Installing psql
          # Version should match the PG image
          command: |
            # Create the file repository configuration:
            sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
            # Import the repository signing key:
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            sudo apt-get update && sudo apt-get install postgresql-client-13
      - sre/run-python-tests:
          extras: '-E network'
          before-steps:
            - run:
                name: Initializing DB
                command: ./tests/static/init-pg.sh
                environment:
                  PGHOST: 127.0.0.1
                  PGUSER: postgres
                  PGPASSWORD: postgres
                  INIT_FILE: ./tests/init.sql
                  SQL_FOLDER: ./tests/static

  # Docker Images

  export-requirements:
    executor: export-poetry
    steps:
      - checkout
      - sre/export-poetry:
          extras: '--without-hashes'

  export-requirements-network:
    executor: export-poetry
    steps:
      - checkout
      - sre/export-poetry:
          extras: '--without-hashes -E network'

  # Build

  build-docker-13:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          dockerfile: './docker/pg-13/Dockerfile'
          image_name: 'tracktor/padmy'
          version: ${VERSION}-13
          latest_version: 'latest-13'
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

  build-docker-network-13:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          dockerfile: './docker/pg-13/Dockerfile'
          image_name: 'tracktor/padmy'
          version: ${VERSION}-network-13
          latest_version: 'latest-network-13'
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

  build-docker-14:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          dockerfile: './docker/pg-14/Dockerfile'
          image_name: 'tracktor/padmy'
          version: ${VERSION}-14
          latest_version: 'latest-14'
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

  build-docker-network-14:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          dockerfile: './docker/pg-14/Dockerfile'
          image_name: 'tracktor/padmy'
          version: ${VERSION}-network-14
          latest_version: 'latest-network-14'
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

  # Publish

  build-publish-docker-13:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          image_name: 'tracktor/padmy'
          version: ${VERSION}-13
          latest_version: 'latest-13'
          publish: true
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

  build-publish-docker-network-13:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          image_name: 'tracktor/padmy'
          version: ${VERSION}-network-13
          latest_version: 'latest-network-13'
          publish: true
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

  build-publish-docker-14:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          image_name: 'tracktor/padmy'
          version: ${VERSION}-14
          latest_version: 'latest-14'
          publish: true
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

  build-publish-docker-network-14:
    executor: build-docker
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - attach_workspace:
          at: .
      - sre/load-poetry-version
      - sre/build-docker:
          image_name: 'tracktor/padmy'
          version: ${VERSION}-network-14
          latest_version: 'latest-network-14'
          publish: true
          registry_pwd: $CONTAINER_REGISTRY_PWD
          registry_user: $CONTAINER_REGISTRY_USER

workflows:

  features:
    when:
      matches:
        pattern: "^(feat|feature)\\/.*$"
        value: << pipeline.git.branch >>
    jobs:
      - run-tests

  dev:
    when:
      matches:
        pattern: "^develop$"
        value: << pipeline.git.branch >>
    jobs:
      - run-tests
      - export-requirements
      - export-requirements-network
      - build-docker-13:
          requires: [
            run-tests,
            export-requirements
          ]
          context: *staging_context
      - build-docker-network-13:
          requires: [
            run-tests,
            export-requirements-network
          ]
          context: *staging_context

      - build-docker-14:
          requires: [
            run-tests,
            export-requirements
          ]
          context: *staging_context
      - build-docker-network-14:
          requires: [
            run-tests,
            export-requirements-network
          ]
          context: *staging_context

  production:
    when:
      matches:
        pattern: "^master$"
        value: << pipeline.git.branch >>
    jobs:
      - run-tests
      - export-requirements
      - export-requirements-network
      - build-publish-docker-13:
          requires: [
            run-tests,
            export-requirements
          ]
          context: *production_context
      - build-publish-docker-network-13:
          requires: [
            run-tests,
            export-requirements-network
          ]
          context: *production_context
      - build-publish-docker-14:
          requires: [
            run-tests,
            export-requirements
          ]
          context: *production_context
      - build-publish-docker-network-14:
          requires: [
            run-tests,
            export-requirements-network
          ]
          context: *production_context
